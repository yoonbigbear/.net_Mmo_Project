// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TransformResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_9_29(); }
  public static TransformResp GetRootAsTransformResp(ByteBuffer _bb) { return GetRootAsTransformResp(_bb, new TransformResp()); }
  public static TransformResp GetRootAsTransformResp(ByteBuffer _bb, TransformResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TransformResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vec3? CurPos { get { int o = __p.__offset(4); return o != 0 ? (Vec3?)(new Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ErrorCode ErrorCode { get { int o = __p.__offset(6); return o != 0 ? (ErrorCode)__p.bb.GetShort(o + __p.bb_pos) : ErrorCode.Success; } }

  public static Offset<TransformResp> CreateTransformResp(FlatBufferBuilder builder,
      Vec3T cur_pos = null,
      ErrorCode error_code = ErrorCode.Success) {
    builder.StartTable(2);
    TransformResp.AddCurPos(builder, Vec3.Pack(builder, cur_pos));
    TransformResp.AddErrorCode(builder, error_code);
    return TransformResp.EndTransformResp(builder);
  }

  public static void StartTransformResp(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddCurPos(FlatBufferBuilder builder, Offset<Vec3> curPosOffset) { builder.AddStruct(0, curPosOffset.Value, 0); }
  public static void AddErrorCode(FlatBufferBuilder builder, ErrorCode errorCode) { builder.AddShort(1, (short)errorCode, 0); }
  public static Offset<TransformResp> EndTransformResp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TransformResp>(o);
  }
  public TransformRespT UnPack() {
    var _o = new TransformRespT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TransformRespT _o) {
    _o.CurPos = this.CurPos.HasValue ? this.CurPos.Value.UnPack() : null;
    _o.ErrorCode = this.ErrorCode;
  }
  public static Offset<TransformResp> Pack(FlatBufferBuilder builder, TransformRespT _o) {
    if (_o == null) return default(Offset<TransformResp>);
    return CreateTransformResp(
      builder,
      _o.CurPos,
      _o.ErrorCode);
  }
}

public class TransformRespT
{
  [Newtonsoft.Json.JsonProperty("cur_pos")]
  public Vec3T CurPos { get; set; }
  [Newtonsoft.Json.JsonProperty("error_code")]
  public ErrorCode ErrorCode { get; set; }

  public TransformRespT() {
    this.CurPos = new Vec3T();
    this.ErrorCode = ErrorCode.Success;
  }
}

