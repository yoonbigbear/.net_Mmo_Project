// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EnterLobbyResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_9_29(); }
  public static EnterLobbyResp GetRootAsEnterLobbyResp(ByteBuffer _bb) { return GetRootAsEnterLobbyResp(_bb, new EnterLobbyResp()); }
  public static EnterLobbyResp GetRootAsEnterLobbyResp(ByteBuffer _bb, EnterLobbyResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EnterLobbyResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ErrorCode ErrorCode { get { int o = __p.__offset(4); return o != 0 ? (ErrorCode)__p.bb.GetShort(o + __p.bb_pos) : ErrorCode.Success; } }
  public CharacterInfo? CharList(int j) { int o = __p.__offset(6); return o != 0 ? (CharacterInfo?)(new CharacterInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CharListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<EnterLobbyResp> CreateEnterLobbyResp(FlatBufferBuilder builder,
      ErrorCode error_code = ErrorCode.Success,
      VectorOffset char_listOffset = default(VectorOffset)) {
    builder.StartTable(2);
    EnterLobbyResp.AddCharList(builder, char_listOffset);
    EnterLobbyResp.AddErrorCode(builder, error_code);
    return EnterLobbyResp.EndEnterLobbyResp(builder);
  }

  public static void StartEnterLobbyResp(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddErrorCode(FlatBufferBuilder builder, ErrorCode errorCode) { builder.AddShort(0, (short)errorCode, 0); }
  public static void AddCharList(FlatBufferBuilder builder, VectorOffset charListOffset) { builder.AddOffset(1, charListOffset.Value, 0); }
  public static VectorOffset CreateCharListVector(FlatBufferBuilder builder, Offset<CharacterInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCharListVectorBlock(FlatBufferBuilder builder, Offset<CharacterInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCharListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<CharacterInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCharListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<CharacterInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCharListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EnterLobbyResp> EndEnterLobbyResp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<EnterLobbyResp>(o);
  }
  public EnterLobbyRespT UnPack() {
    var _o = new EnterLobbyRespT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EnterLobbyRespT _o) {
    _o.ErrorCode = this.ErrorCode;
    _o.CharList = new List<CharacterInfoT>();
    for (var _j = 0; _j < this.CharListLength; ++_j) {_o.CharList.Add(this.CharList(_j).HasValue ? this.CharList(_j).Value.UnPack() : null);}
  }
  public static Offset<EnterLobbyResp> Pack(FlatBufferBuilder builder, EnterLobbyRespT _o) {
    if (_o == null) return default(Offset<EnterLobbyResp>);
    var _char_list = default(VectorOffset);
    if (_o.CharList != null) {
      var __char_list = new Offset<CharacterInfo>[_o.CharList.Count];
      for (var _j = 0; _j < __char_list.Length; ++_j) { __char_list[_j] = CharacterInfo.Pack(builder, _o.CharList[_j]); }
      _char_list = CreateCharListVector(builder, __char_list);
    }
    return CreateEnterLobbyResp(
      builder,
      _o.ErrorCode,
      _char_list);
  }
}

public class EnterLobbyRespT
{
  [Newtonsoft.Json.JsonProperty("error_code")]
  public ErrorCode ErrorCode { get; set; }
  [Newtonsoft.Json.JsonProperty("char_list")]
  public List<CharacterInfoT> CharList { get; set; }

  public EnterLobbyRespT() {
    this.ErrorCode = ErrorCode.Success;
    this.CharList = null;
  }
}

