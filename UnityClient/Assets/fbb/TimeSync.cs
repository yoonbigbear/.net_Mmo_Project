// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TimeSync : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_9_29(); }
  public static TimeSync GetRootAsTimeSync(ByteBuffer _bb) { return GetRootAsTimeSync(_bb, new TimeSync()); }
  public static TimeSync GetRootAsTimeSync(ByteBuffer _bb, TimeSync obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TimeSync __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long ServerTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<TimeSync> CreateTimeSync(FlatBufferBuilder builder,
      long server_time = 0) {
    builder.StartTable(1);
    TimeSync.AddServerTime(builder, server_time);
    return TimeSync.EndTimeSync(builder);
  }

  public static void StartTimeSync(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddServerTime(FlatBufferBuilder builder, long serverTime) { builder.AddLong(0, serverTime, 0); }
  public static Offset<TimeSync> EndTimeSync(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TimeSync>(o);
  }
  public TimeSyncT UnPack() {
    var _o = new TimeSyncT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TimeSyncT _o) {
    _o.ServerTime = this.ServerTime;
  }
  public static Offset<TimeSync> Pack(FlatBufferBuilder builder, TimeSyncT _o) {
    if (_o == null) return default(Offset<TimeSync>);
    return CreateTimeSync(
      builder,
      _o.ServerTime);
  }
}

public class TimeSyncT
{
  [Newtonsoft.Json.JsonProperty("server_time")]
  public long ServerTime { get; set; }

  public TimeSyncT() {
    this.ServerTime = 0;
  }
}

