// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TransformSync : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_9_29(); }
  public static TransformSync GetRootAsTransformSync(ByteBuffer _bb) { return GetRootAsTransformSync(_bb, new TransformSync()); }
  public static TransformSync GetRootAsTransformSync(ByteBuffer _bb, TransformSync obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TransformSync __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ObjId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public TransformInfo? Transform { get { int o = __p.__offset(6); return o != 0 ? (TransformInfo?)(new TransformInfo()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<TransformSync> CreateTransformSync(FlatBufferBuilder builder,
      uint obj_id = 0,
      TransformInfoT transform = null) {
    builder.StartTable(2);
    TransformSync.AddTransform(builder, TransformInfo.Pack(builder, transform));
    TransformSync.AddObjId(builder, obj_id);
    return TransformSync.EndTransformSync(builder);
  }

  public static void StartTransformSync(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddObjId(FlatBufferBuilder builder, uint objId) { builder.AddUint(0, objId, 0); }
  public static void AddTransform(FlatBufferBuilder builder, Offset<TransformInfo> transformOffset) { builder.AddStruct(1, transformOffset.Value, 0); }
  public static Offset<TransformSync> EndTransformSync(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TransformSync>(o);
  }
  public TransformSyncT UnPack() {
    var _o = new TransformSyncT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TransformSyncT _o) {
    _o.ObjId = this.ObjId;
    _o.Transform = this.Transform.HasValue ? this.Transform.Value.UnPack() : null;
  }
  public static Offset<TransformSync> Pack(FlatBufferBuilder builder, TransformSyncT _o) {
    if (_o == null) return default(Offset<TransformSync>);
    return CreateTransformSync(
      builder,
      _o.ObjId,
      _o.Transform);
  }
}

public class TransformSyncT
{
  [Newtonsoft.Json.JsonProperty("obj_id")]
  public uint ObjId { get; set; }
  [Newtonsoft.Json.JsonProperty("transform")]
  public TransformInfoT Transform { get; set; }

  public TransformSyncT() {
    this.ObjId = 0;
    this.Transform = new TransformInfoT();
  }
}

