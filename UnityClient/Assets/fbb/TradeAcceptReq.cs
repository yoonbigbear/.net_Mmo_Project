// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TradeAcceptReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_9_29(); }
  public static TradeAcceptReq GetRootAsTradeAcceptReq(ByteBuffer _bb) { return GetRootAsTradeAcceptReq(_bb, new TradeAcceptReq()); }
  public static TradeAcceptReq GetRootAsTradeAcceptReq(ByteBuffer _bb, TradeAcceptReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TradeAcceptReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TradeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<TradeAcceptReq> CreateTradeAcceptReq(FlatBufferBuilder builder,
      uint trade_id = 0) {
    builder.StartTable(1);
    TradeAcceptReq.AddTradeId(builder, trade_id);
    return TradeAcceptReq.EndTradeAcceptReq(builder);
  }

  public static void StartTradeAcceptReq(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTradeId(FlatBufferBuilder builder, uint tradeId) { builder.AddUint(0, tradeId, 0); }
  public static Offset<TradeAcceptReq> EndTradeAcceptReq(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TradeAcceptReq>(o);
  }
  public TradeAcceptReqT UnPack() {
    var _o = new TradeAcceptReqT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TradeAcceptReqT _o) {
    _o.TradeId = this.TradeId;
  }
  public static Offset<TradeAcceptReq> Pack(FlatBufferBuilder builder, TradeAcceptReqT _o) {
    if (_o == null) return default(Offset<TradeAcceptReq>);
    return CreateTradeAcceptReq(
      builder,
      _o.TradeId);
  }
}

public class TradeAcceptReqT
{
  [Newtonsoft.Json.JsonProperty("trade_id")]
  public uint TradeId { get; set; }

  public TradeAcceptReqT() {
    this.TradeId = 0;
  }
}

