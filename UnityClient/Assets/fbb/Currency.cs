// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Currency : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Currency __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Gold { get { return __p.bb.GetLong(__p.bb_pos + 0); } }

  public static Offset<Currency> CreateCurrency(FlatBufferBuilder builder, long Gold) {
    builder.Prep(8, 8);
    builder.PutLong(Gold);
    return new Offset<Currency>(builder.Offset);
  }
  public CurrencyT UnPack() {
    var _o = new CurrencyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CurrencyT _o) {
    _o.Gold = this.Gold;
  }
  public static Offset<Currency> Pack(FlatBufferBuilder builder, CurrencyT _o) {
    if (_o == null) return default(Offset<Currency>);
    return CreateCurrency(
      builder,
      _o.Gold);
  }
}

public class CurrencyT
{
  [Newtonsoft.Json.JsonProperty("gold")]
  public long Gold { get; set; }

  public CurrencyT() {
    this.Gold = 0;
  }
}

