// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MovePortalResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_9_29(); }
  public static MovePortalResp GetRootAsMovePortalResp(ByteBuffer _bb) { return GetRootAsMovePortalResp(_bb, new MovePortalResp()); }
  public static MovePortalResp GetRootAsMovePortalResp(ByteBuffer _bb, MovePortalResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MovePortalResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint PortalId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint WorldId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ErrorCode ErrorCode { get { int o = __p.__offset(8); return o != 0 ? (ErrorCode)__p.bb.GetShort(o + __p.bb_pos) : ErrorCode.Success; } }

  public static Offset<MovePortalResp> CreateMovePortalResp(FlatBufferBuilder builder,
      uint portal_id = 0,
      uint world_id = 0,
      ErrorCode error_code = ErrorCode.Success) {
    builder.StartTable(3);
    MovePortalResp.AddWorldId(builder, world_id);
    MovePortalResp.AddPortalId(builder, portal_id);
    MovePortalResp.AddErrorCode(builder, error_code);
    return MovePortalResp.EndMovePortalResp(builder);
  }

  public static void StartMovePortalResp(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPortalId(FlatBufferBuilder builder, uint portalId) { builder.AddUint(0, portalId, 0); }
  public static void AddWorldId(FlatBufferBuilder builder, uint worldId) { builder.AddUint(1, worldId, 0); }
  public static void AddErrorCode(FlatBufferBuilder builder, ErrorCode errorCode) { builder.AddShort(2, (short)errorCode, 0); }
  public static Offset<MovePortalResp> EndMovePortalResp(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MovePortalResp>(o);
  }
  public MovePortalRespT UnPack() {
    var _o = new MovePortalRespT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MovePortalRespT _o) {
    _o.PortalId = this.PortalId;
    _o.WorldId = this.WorldId;
    _o.ErrorCode = this.ErrorCode;
  }
  public static Offset<MovePortalResp> Pack(FlatBufferBuilder builder, MovePortalRespT _o) {
    if (_o == null) return default(Offset<MovePortalResp>);
    return CreateMovePortalResp(
      builder,
      _o.PortalId,
      _o.WorldId,
      _o.ErrorCode);
  }
}

public class MovePortalRespT
{
  [Newtonsoft.Json.JsonProperty("portal_id")]
  public uint PortalId { get; set; }
  [Newtonsoft.Json.JsonProperty("world_id")]
  public uint WorldId { get; set; }
  [Newtonsoft.Json.JsonProperty("error_code")]
  public ErrorCode ErrorCode { get; set; }

  public MovePortalRespT() {
    this.PortalId = 0;
    this.WorldId = 0;
    this.ErrorCode = ErrorCode.Success;
  }
}

